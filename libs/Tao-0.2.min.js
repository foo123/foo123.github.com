/**
*  Tao
*  A simple, tiny, isomorphic, precise and fast template engine for handling both string and live dom based templates
*
*  @version: 0.2
*  https://github.com/foo123/Tao.js
*
**/
!function(e,t,n){"use strict";var i,r="object"==typeof module&&module.exports,u="function"==typeof define&&define.amd;r?module.exports=(module.$deps=module.$deps||{})[t]=module.$deps[t]||n.call(e,{NODE:module})||1:u&&"function"==typeof require&&"function"==typeof require.specified&&require.specified(t)?define(t,["require","exports","module"],function(t,i,r){return n.call(e,{AMD:r})}):t in e||(e[t]=i=n.call(e,{})||1)&&u&&define(t,[],function(){return i})}(this,"Tao",function(e,t){"use strict";function n(e,t){if(!e)return null;if(e.substr&&e.substring){var n=d(e,new RegExp(t.source,"g")),r=function(e){var t,r,u,s=n.length,l="";for(t=0;s>t;t++)r=n[t][0],u=n[t][1],r?l+=u:(e[i](u)&&(n[t][2]=String(e[u])),l+=n[t][2]);return l};return r.dispose=function(){e=null,n=null},r}var n=c(e,new RegExp(t.source,"")),r=function(e){var t,r,s,h,p,d,c,g,a,x,b,m,T,v;for(h=f(e),c=h.length,d=0;c>d;d++)if(p=h[d],g=String(e[p]),n[i](p)){for(a=n[p][l],r=0,s=a.length;s>r;r++)a[r][u]=g;for(x=n[p][o],r=0,s=x.length;s>r;r++){if(t=x[r],b=t[1],T=b.length,v=T?b[0][u]:"",T>1)for(m=1;T>m;m++)v+=b[m][u];t[0][u]=v}}};return r.dispose=function(){e=null,n=null},r}var i="hasOwnProperty",r="match",u="nodeValue",s="parentNode",l=0,o=1,f=Object.keys,h=0,p=function(e){return e.$TID$=e.$TID$||e.id||"_TID_"+(++h).toString(16)},d=function(e,n){for(var i,r=[],u=0;i=n.exec(e);)r.push([1,e.slice(u,n.lastIndex-i[0].length)]),r.push([0,i[1]?i[1]:i[0],t]),u=n.lastIndex;return r.push([1,e.slice(u)]),r},c=function(e,t){var n,f,h,d,c,g,a,x,b,m,T,v,y,S,$,I,w,D,q,C,E={};if(f=[],h=[],x=e,x.attributes&&(c=x.attributes.length))for(d=0;c>d;d++)b=x.attributes[d],(g=b[u][r](t))&&h.push([b,g,x]);if(3===x.nodeType)(g=x[u][r](t))&&f.push([x,g,x[s]]);else if(x.firstChild)for(D=[x=x.firstChild];D.length;){if(x.attributes&&(c=x.attributes.length))for(d=0;c>d;d++)b=x.attributes[d],(g=b[u][r](t))&&h.push([b,g,x]);if(x.firstChild)D.push(x=x.firstChild);else{for(3===x.nodeType&&(g=x[u][r](t))&&f.push([x,g,x[s]]),x=D.pop();D.length&&!x.nextSibling;)x=D.pop();x.nextSibling&&D.push(x=x.nextSibling)}}for(v={},d=0,c=f.length;c>d;d++)if(a=f[d],w=a[0],g=a[1],x=a[2],T=p(x),E[T]=E[T]||[{},{}],v[T]=x,q=E[T][l],I=w[u],I.length>g[0].length){do m=g[1],y=w.splitText(g.index),w=y.splitText(g[0].length),(q[m]=q[m]||[]).push(y),g=w[u][r](t);while(g)}else m=g[1],y=w,(q[m]=q[m]||[]).push(y);for(S={},d=0,c=h.length;c>d;d++)if(a=h[d],b=a[0],g=a[1],x=a[2],T=p(x),E[T]=E[T]||[{},{}],v[T]=x,q=E[T][l],C=E[T][o],I=b[u],$=I in S)for(g=0;g<S[I][0].length;g++)C[S[I][0][g]].push([b,S[I][1],I]);else if(w=document.createTextNode(I||""),S[I]=[[],[w]],I.length>g[0].length){do m=g[1],y=w.splitText(g.index),w=y.splitText(g[0].length),S[I][0].push(m),S[I][1].push(y),S[I][1].push(w),(q[m]=q[m]||[]).push(y),(C[m]=C[m]||[]).push([b,S[I][1],I]),g=w[u][r](t);while(g)}else y=w,m=g[1],S[I][0].push(m),(q[m]=q[m]||[]).push(y),(C[m]=C[m]||[]).push([b,S[I][1],I]);n={};for(T in E)if(E[i](T)){for(m in E[T][l])E[T][l][i](m)&&(n[i](m)?n[m][l]=n[m][l].concat(E[T][l][m]):n[m]=[E[T][l][m],E[T][o][m]||[]]);for(m in E[T][o])E[T][o][i](m)&&(n[i](m)?n[m][o]=n[m][o].concat(E[T][o][m]):n[m]=[E[T][l][m]||[],E[T][o][m]])}return n};return n.VERSION="0.2",n});