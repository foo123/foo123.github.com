/**
*  Tao
*  A simple, tiny, isomorphic, precise and fast template engine for handling both string and live dom based templates
*
*  @version: 0.2
*  https://github.com/foo123/Tao.js
*
**/
!function(e,t,n){"use strict";var i,r="object"==typeof module&&module.exports,u="function"==typeof define&&define.amd;r?module.exports=(module.$deps=module.$deps||{})[t]=module.$deps[t]||n.call(e,{NODE:module})||1:u&&"function"==typeof require&&"function"==typeof require.specified&&require.specified(t)?define(t,["require","exports","module"],function(t,i,r){return n.call(e,{AMD:r})}):t in e||(e[t]=i=n.call(e,{})||1)&&u&&define(t,[],function(){return i})}(this,"Tao",function(e,t){"use strict";function n(e,t){var n;return e?e.substr&&e.substring?(e=c(e,new RegExp(t.source,"g")),n=function r(e){var t,n,u,s,o=r.tpl,l=o.length,f="";for(n=0;l>n;n++)t=o[n],u=t[0],s=t[1],u?f+=s:(e[i](s)&&(t[2]=String(e[s])),f+=t[2]);return f}):(e=d(e,new RegExp(t.source,"")),n=function s(e){var t,n,r,p,h,c,d,g,a,x,b,m,T,y,v=s.tpl,S=v[o];for(p=f(e),d=p.length,c=0;d>c;c++)if(h=p[c],g=String(e[h]),S[i](h)){for(a=S[h][o],n=0,r=a.length;r>n;n++)a[n][u]=g;for(x=S[h][l],n=0,r=x.length;r>n;n++){if(t=x[n],b=t[1],T=b.length,y=T?b[0][u]:"",T>1)for(m=1;T>m;m++)y+=b[m][u];t[0][u]=y}}}):n=function(){},n.tpl=e,n.dispose=function(){n.tpl=null},n}var i="hasOwnProperty",r="match",u="nodeValue",s="parentNode",o=0,l=1,f=Object.keys,p=0,h=function(e){return e.$TID$=e.$TID$||e.id||"_TID_"+(++p).toString(16)},c=function(e,n){for(var i,r=[],u=0;i=n.exec(e);)r.push([1,e.slice(u,n.lastIndex-i[0].length)]),r.push([0,i[1]?i[1]:i[0],t]),u=n.lastIndex;return r.push([1,e.slice(u)]),r},d=function(e,t){var n,f,p,c,d,g,a,x,b,m,T,y,v,S,$,I,w,D,q,C,E={};if(f=[],p=[],x=e,x.attributes&&(d=x.attributes.length))for(c=0;d>c;c++)b=x.attributes[c],(g=b[u][r](t))&&p.push([b,g,x]);if(3===x.nodeType)(g=x[u][r](t))&&f.push([x,g,x[s]]);else if(x.firstChild)for(D=[x=x.firstChild];D.length;){if(x.attributes&&(d=x.attributes.length))for(c=0;d>c;c++)b=x.attributes[c],(g=b[u][r](t))&&p.push([b,g,x]);if(x.firstChild)D.push(x=x.firstChild);else{for(3===x.nodeType&&(g=x[u][r](t))&&f.push([x,g,x[s]]),x=D.pop();D.length&&!x.nextSibling;)x=D.pop();x.nextSibling&&D.push(x=x.nextSibling)}}for(y={},c=0,d=f.length;d>c;c++)if(a=f[c],w=a[0],g=a[1],x=a[2],T=h(x),E[T]=E[T]||[{},{}],y[T]=x,q=E[T][o],I=w[u],I.length>g[0].length){do m=g[1]?g[1]:g[0],v=w.splitText(g.index),w=v.splitText(g[0].length),(q[m]=q[m]||[]).push(v),g=w[u][r](t);while(g)}else m=g[1]?g[1]:g[0],v=w,(q[m]=q[m]||[]).push(v);for(S={},c=0,d=p.length;d>c;c++)if(a=p[c],b=a[0],g=a[1],x=a[2],T=h(x),E[T]=E[T]||[{},{}],y[T]=x,q=E[T][o],C=E[T][l],I=b[u],$=I in S)for(g=0;g<S[I][0].length;g++)C[S[I][0][g]].push([b,S[I][1],I]);else if(w=document.createTextNode(I||""),S[I]=[[],[w]],I.length>g[0].length){do m=g[1]?g[1]:g[0],v=w.splitText(g.index),w=v.splitText(g[0].length),S[I][0].push(m),S[I][1].push(v),S[I][1].push(w),(q[m]=q[m]||[]).push(v),(C[m]=C[m]||[]).push([b,S[I][1],I]),g=w[u][r](t);while(g)}else v=w,m=g[1]?g[1]:g[0],S[I][0].push(m),(q[m]=q[m]||[]).push(v),(C[m]=C[m]||[]).push([b,S[I][1],I]);n={};for(T in E)if(E[i](T)){for(m in E[T][o])E[T][o][i](m)&&(n[i](m)?n[m][o]=n[m][o].concat(E[T][o][m]):n[m]=[E[T][o][m],E[T][l][m]||[]]);for(m in E[T][l])E[T][l][i](m)&&(n[i](m)?n[m][l]=n[m][l].concat(E[T][l][m]):n[m]=[E[T][o][m]||[],E[T][l][m]])}return[n,e]};return n.VERSION="0.2",n});