{"version":3,"sources":["components/Loader.js","components/Store.js","components/Weather.js","home/index.js","search/index.js","weather/index.js","App.js","serviceWorker.js","index.js"],"names":["Loader","react_default","a","createElement","className","Component","components_Store","Store","Object","classCallCheck","this","$data","$timer","key","data","prototype","hasOwnProperty","call","interval","_this","clearTimeout","setTimeout","clear","autoclear","T","fahrenheit","symbol","celsius","t","format_num","n","p","Math","round","format_temp","scale","convert","withsymbol","weather_icon","icon","type","toLowerCase","wind_icon","dir","API_URL","encodeURIComponent","WeatherData","detailed","consolidated_weather","length","map","current","strdate","_strdate$split","split","_strdate$split2","slicedToArray","year","month","day","date","Date","dayOfWeek","getDay","monthName","concat","format_date","applicable_date","src","weather_state_abbr","alt","weather_state_name","title","the_temp","min_temp","max_temp","wind_speed","wind_direction_compass","Weather","props","possibleConstructorReturn","getPrototypeOf","state","city","loading","_this2","woeid","weatherData","store","get","setState","fetch","then","response","json","jsonResponse","contents","JSON","parse","set","react_router_dom","to","src_components_Loader","text","cities","name","HomePage","handleOnClick","redirect","handleInput","evt","target","value","react_router","push","placeholder","onChange","onClick","src_components_Weather","SearchPage","decodeURIComponent","match","params","term","searchData","place","WeatherPage","App","basename","hashType","exact","path","render","home","assign","weather","search","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.617e60ac.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Loader.css';\n\nclass Loader extends Component {\n    render() {\n        return (\n            <div className=\"lds-facebook\"><div></div><div></div><div></div></div>\n        );\n    }\n}\n\nexport default Loader;\n","class Store {\n    constructor() {\n        this.$data = {};\n        this.$timer = null;\n    }\n    \n    set(key, data) {\n        /*try {\n            localStorage.setItem('react_weather_component_'+String(key), JSON.stringify(data));\n        } catch(e) {\n            return false;\n        }*/\n        this.$data[key] = data;\n        return this;\n    }\n    \n    get(key) {\n        /*const data = localStorage.getItem('react_weather_component_'+String(key));\n        return data ? JSON.parse(data) : null;*/\n        return Object.prototype.hasOwnProperty.call(this.$data, key) ? this.$data[key] : null;\n    }\n    \n    del(key) {\n        /*localStorage.removeItem('react_weather_component_'+String(key));*/\n        if ( Object.prototype.hasOwnProperty.call(this.$data, key) ) delete this.$data[key];\n        return this;\n    }\n    \n    clear()  {\n        this.$data = {};\n        return this;\n    }\n    \n    autoclear(interval) {\n        if ( this.$timer ) {\n            clearTimeout(this.$timer);\n            this.$timer = null;\n        }\n        const clear = ( ) => {\n            this.clear();\n            this.$timer = setTimeout(clear, interval);\n        };\n        this.$timer = setTimeout(clear, interval);\n        return this;\n    }\n}\n\n// singleton\nexport default new Store().autoclear(30 * 60 * 1000); // auto-clear every 30 minutes\n\n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Loader from './Loader';\nimport store from './Store';\n\nimport './Weather.css';\n\nfunction format_date( strdate ) {\n    const [year, month, day] = strdate.split('-');\n    const date = new Date(strdate);\n    const dayOfWeek =  date ? ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'][date.getDay()] : 'Unknown';\n    const monthName = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'][month-1];\n    return `${dayOfWeek}, ${monthName} ${day} ${year}`;\n}\n\n// temperature scales\nconst T = {\n    fahrenheit: {symbol: '\\u2109', celsius: t => ((5/9) * (t - 32)) },\n    celsius: {symbol: '\\u2103', fahrenheit: t => (t * 9 / 5 + 32) }\n}\n\nfunction format_num( n, p ) {\n    return Math.round(+n); //(+n).toFixed(+(p || 2));\n}\n\nfunction format_temp( t, scale, convert, withsymbol ) {\n    scale = scale || 'celsius';\n    if ( convert ) t = T['fahrenheit' === scale ? 'celsius' : 'fahrenheit'][scale](t);\n    return format_num( t ) + (withsymbol ? T[scale].symbol : '');\n}\n\nfunction weather_icon( icon, type ) {\n    return \"https://www.metaweather.com/static/img/weather/\"+icon+\".\"+(type||\"svg\").toLowerCase();\n}\n\nfunction wind_icon( dir ) {\n    return (<i className={\"wind-dir \"+dir.toLowerCase()}></i>);\n}\n\nconst API_URL = 'https://api.allorigins.win/get?url=' + encodeURIComponent('https://www.metaweather.com/api/location/');\n//const API_URL = 'http://localhost:8080/weather.php?command=location&woeid=';\n//const API_URL = '/weather.php?command=location&woeid=';\n\n\nfunction WeatherData( data, detailed ) {\n    if ( data && data.consolidated_weather && data.consolidated_weather.length ) {\n        if ( detailed ) {\n            return data.consolidated_weather.map(current => (\n                <div className=\"weather-data\">\n                <p><b>{format_date( current.applicable_date )}</b></p>\n                <img className=\"weather-icon\" src={weather_icon(current.weather_state_abbr)} alt={current.weather_state_name} title={current.weather_state_name} />\n                <p><span className=\"weather-details\">{format_temp(current.the_temp, 'celsius', 0, 1)} ({format_temp(current.min_temp, 'celsius', 0, 1)} &mdash; {format_temp(current.max_temp, 'celsius', 0, 1)})</span></p>\n                <p><span className=\"weather-details\">{format_num(current.wind_speed)}mph</span> {wind_icon(current.wind_direction_compass)} ({current.wind_direction_compass})</p>\n                </div>\n            ));\n        } else {\n            let current = data.consolidated_weather[0];\n            return (\n                <div className=\"weather-data\">\n                <p><b>Today</b></p>\n                <img className=\"weather-icon\" src={weather_icon(current.weather_state_abbr)} alt={current.weather_state_name} title={current.weather_state_name} />\n                <p><span className=\"weather-details\">{format_temp(current.the_temp, 'celsius', 0, 1)} ({format_temp(current.min_temp, 'celsius', 0, 1)} &mdash; {format_temp(current.max_temp, 'celsius', 0, 1)})</span></p>\n                <p><span className=\"weather-details\">{format_num(current.wind_speed)}mph</span> {wind_icon(current.wind_direction_compass)} ({current.wind_direction_compass})</p>\n                </div>\n            );\n        }\n    } else {\n        return (\n            <div className=\"weather-data\">\n            <p><b>No data!</b></p>\n            </div>\n        );\n    }\n}\n\nclass Weather extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            city: this.props.city ? this.props.city : '..',\n            loading: true,\n            data: null\n        };\n    }\n\n    componentDidMount() {\n        if ( !this.props.woeid ) return;\n\n        let weatherData = store.get('weather_'+this.props.woeid);\n        if ( weatherData ) {\n            this.setState({\n                city: weatherData.title,\n                loading: false,\n                data: weatherData\n            });\n        } else {\n            fetch(API_URL+this.props.woeid)\n            .then(response => response.json())\n            .then(jsonResponse => {\n                if (jsonResponse.contents) jsonResponse = JSON.parse(jsonResponse.contents);\n                store.set('weather_'+this.props.woeid, jsonResponse);\n                this.setState({\n                    city: jsonResponse.title,\n                    loading: false,\n                    data: jsonResponse\n                });\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div className={\"weather\" + (this.props.detailed ? \" detailed\" : \"\")}>\n                <div className=\"weather-header\">\n                {this.props.detailed ? (<b>{this.state.city + ' (Forecast)'}</b>) : (<Link to={\"/weather/\"+this.props.woeid}><b>{this.state.city}</b></Link>)}\n                </div>\n                <div className=\"weather-content\">\n                    {this.state.loading ? (<Loader text=\"Loading..\"/>) : WeatherData(this.state.data, this.props.detailed)}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Weather;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Weather from '../components/Weather';\n\nconst cities = [\n    /*{name: 'Istanbul', woeid: 2344116},*/\n    {name: 'Athens', woeid: 946738},\n    {name: 'Beijing', woeid: 2151330},\n    {name: 'Berlin', woeid: 638242},\n    {name: 'Cairo', woeid: 1521894},\n    {name: 'London', woeid: 44418},\n    {name: 'Madrid', woeid: 766273},\n    {name: 'Moscow', woeid: 2122265},\n    {name: 'New Delhi', woeid: 28743736},\n    {name: 'New York', woeid: 2459115},\n    {name: 'Paris', woeid: 615702},\n    {name: 'Sydney', woeid: 1105779},\n    /*{name: 'Helsinki', woeid: 565346},\n    {name: 'Dublin', woeid: 560743},\n    {name: 'Vancouver', woeid: 9807}*/\n];\n\nclass HomePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirect: false,\n            text: ''\n        };\n    }\n\n    handleOnClick = () => {\n        this.setState({redirect: true});\n    }\n\n    handleInput = (evt) => {\n        this.setState({text: evt.target.value});\n    }\n\n    render() {\n        if ( this.state.redirect ) {\n            // redirect and update url\n            return (<Redirect push to={\"/search/\"+encodeURIComponent(this.state.text.toLowerCase())} />);\n        }\n        return (\n            <div className=\"page page-home\">\n                <h2 className=\"page-header\">Weather at a Glance</h2>\n                <div className=\"search-box\">\n                    <input type=\"text\" placeholder=\"search..\" value={this.state.text} onChange={this.handleInput} />\n                    <button type=\"button\" onClick={this.handleOnClick}>Search!</button>\n                </div>\n                {cities.map(city => <Weather key={'weather_for_'+city.woeid} city={city.name} woeid={city.woeid} />)}\n            </div>\n        );\n    }\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Loader from '../components/Loader';\nimport Weather from '../components/Weather';\nimport store from '../components/Store';\n\nconst API_URL = 'https://api.allorigins.win/get?url=' + encodeURIComponent('https://www.metaweather.com/api/location/search/?query=');\n//const API_URL = 'https://www.metaweather.com/api/location/search/?query=';\n//const API_URL = 'http://localhost:8080/weather.php?command=search&keyword=';\n//const API_URL = '/weather.php?command=search&keyword=';\n\nclass SearchPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            text: decodeURIComponent(this.props.match.params.term),\n            redirect: false,\n            data: null\n        };\n    }\n\n    componentDidMount() {\n        let searchData = store.get('search_'+this.props.match.params.term);\n        if ( searchData ) {\n            this.setState({\n                loading: false,\n                data: searchData\n            });\n        } else {\n            fetch(API_URL+this.props.match.params.term)\n            .then(response => response.json())\n            .then(jsonResponse => {\n                if (jsonResponse.contents) jsonResponse = JSON.parse(jsonResponse.contents);\n                store.set('search_'+this.props.match.params.term, jsonResponse);\n                this.setState({\n                    loading: false,\n                    data: jsonResponse\n                });\n            });\n        }\n    }\n\n    handleOnClick = () => {\n        this.setState({redirect: true});\n    }\n\n    handleInput = (evt) => {\n        this.setState({text: evt.target.value});\n    }\n\n    render() {\n        if ( this.state.redirect ) {\n            // redirect and update url\n            return (<Redirect push to={\"/search/\"+encodeURIComponent(this.state.text.toLowerCase())} />);\n        }\n        return (\n            <div className=\"page page-search\">\n                <h2 className=\"page-header\">Search Results</h2>\n                <div className=\"search-box\">\n                    <input type=\"text\" placeholder=\"search..\" value={this.state.text} onChange={this.handleInput} />\n                    <button type=\"button\" onClick={this.handleOnClick}>Search!</button>\n                </div>\n                {this.state.loading ? (<Loader text=\"Loading..\" />) : (this.state.data && this.state.data.length ? this.state.data.map(place => <Weather key={'weather_for_'+place.woeid} woeid={place.woeid} city={place.title} />) : (<p><b>No results found!</b></p>))}\n            </div>\n        );\n    }\n}\n\nexport default SearchPage;\n","import React, { Component } from 'react';\nimport Weather from '../components/Weather';\n\nclass WeatherPage extends Component {\n    render() {\n        return (\n            <div className=\"page page-weather\">\n                <h2 className=\"page-header\">Weather Forecast</h2>\n                <Weather key={'weather_for_'+this.props.match.params.woeid} detailed woeid={this.props.match.params.woeid} />\n            </div>\n        );\n    }\n}\n\nexport default WeatherPage;\n","import React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n\nimport HomePage from './home';\nimport SearchPage from './search';\nimport WeatherPage from './weather';\n\nimport './App.css';\n\nclass App extends Component {\n    render() {\n        return (\n            <HashRouter basename=\"/\" hashType=\"slash\">\n            <Switch>\n                <Route \n                    exact path={'/'} \n                    render={props => <HomePage key=\"page_home\" {...props} />}\n                ></Route>\n                <Route \n                    path={'/weather/:woeid'} \n                    render={props => <WeatherPage key=\"page_weather\" {...props} />}\n                ></Route>\n                <Route \n                    path={'/search/:term'}\n                    render={props => <SearchPage key={'page_search_'+props.match.params.term.toLowerCase()} {...props} />}\n                ></Route>\n            </Switch>\n            </HashRouter>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}