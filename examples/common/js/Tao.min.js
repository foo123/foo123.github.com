/**
*  Tao
*  A simple, tiny, isomorphic, precise and fast template engine for handling both string and live dom based templates
*
*  @version: 0.1
*  https://github.com/foo123/Tao.js
*
**/
!function(e,t,n){"use strict";var i,r="object"==typeof module&&module.exports,u="function"==typeof define&&define.amd;r?module.exports=(module.$deps=module.$deps||{})[t]=module.$deps[t]||n.call(e,{NODE:module})||1:u&&"function"==typeof require&&"function"==typeof require.specified&&require.specified(t)?define(t,["require","exports","module"],function(t,i,r){return n.call(e,{AMD:r})}):t in e||(e[t]=i=n.call(e,{})||1)&&u&&define(t,[],function(){return i})}(this,"Tao",function(){"use strict";function e(e,n){if(!e)return null;if(e.substr&&e.substring){var r=h(e,n),o=function(e){var t,n,i,u=r.length,s="";for(t=0;u>t;t++)n=r[t][0],i=r[t][1],s+=n?i:String(e[i]);return s};return o.dispose=function(){e=null,r=null},o}var r=p(e,n),o=function(e){var n,o,f,h,p,d,c,g,a,x,b,m,T,v;for(h=l(e),c=h.length,d=0;c>d;d++)if(p=h[d],g=String(e[p]),r[t](p)){for(a=r[p][u],o=0,f=a.length;f>o;o++)a[o][i]=g;for(x=r[p][s],o=0,f=x.length;f>o;o++){if(n=x[o],b=n[1],T=b.length,v=T?b[0][i]:"",T>1)for(m=1;T>m;m++)v+=b[m][i];n[0][i]=v}}};return o.dispose=function(){e=null,r=null},o}var t="hasOwnProperty",n="match",i="nodeValue",r="parentNode",u=0,s=1,l=Object.keys,o=0,f=function(e){return e.$TID$=e.$TID$||e.id||"_TID_"+(++o).toString(16)},h=function(e,t){var n,i=[],r=0;for(t=new RegExp(t.source,"g");n=t.exec(e);)i.push([1,e.slice(r,t.lastIndex-n[0].length)]),i.push([0,n[1]?n[1]:n[0]]),r=t.lastIndex;return i.push([1,e.slice(r)]),i},p=function(e,l){var o,h,p,d,c,g,a,x,b,m,T,v,y,S,$,I,w,D,q,C,E={};if(l=new RegExp(l.source,""),h=[],p=[],x=e,x.attributes&&(c=x.attributes.length))for(d=0;c>d;d++)b=x.attributes[d],(g=b[i][n](l))&&p.push([b,g,x]);if(3===x.nodeType)(g=x[i][n](l))&&h.push([x,g,x[r]]);else if(x.firstChild)for(D=[x=x.firstChild];D.length;){if(x.attributes&&(c=x.attributes.length))for(d=0;c>d;d++)b=x.attributes[d],(g=b[i][n](l))&&p.push([b,g,x]);if(x.firstChild)D.push(x=x.firstChild);else{for(3===x.nodeType&&(g=x[i][n](l))&&h.push([x,g,x[r]]),x=D.pop();D.length&&!x.nextSibling;)x=D.pop();x.nextSibling&&D.push(x=x.nextSibling)}}for(v={},d=0,c=h.length;c>d;d++)if(a=h[d],w=a[0],g=a[1],x=a[2],T=f(x),E[T]=E[T]||[{},{}],v[T]=x,q=E[T][u],I=w[i],I.length>g[0].length){do m=g[1],y=w.splitText(g.index),w=y.splitText(g[0].length),(q[m]=q[m]||[]).push(y),g=w[i][n](l);while(g)}else m=g[1],y=w,(q[m]=q[m]||[]).push(y);for(S={},d=0,c=p.length;c>d;d++)if(a=p[d],b=a[0],g=a[1],x=a[2],T=f(x),E[T]=E[T]||[{},{}],v[T]=x,q=E[T][u],C=E[T][s],I=b[i],$=I in S)for(g=0;g<S[I][0].length;g++)C[S[I][0][g]].push([b,S[I][1],I]);else if(w=document.createTextNode(I||""),S[I]=[[],[w]],I.length>g[0].length){do m=g[1],y=w.splitText(g.index),w=y.splitText(g[0].length),S[I][0].push(m),S[I][1].push(y),S[I][1].push(w),(q[m]=q[m]||[]).push(y),(C[m]=C[m]||[]).push([b,S[I][1],I]),g=w[i][n](l);while(g)}else y=w,m=g[1],S[I][0].push(m),(q[m]=q[m]||[]).push(y),(C[m]=C[m]||[]).push([b,S[I][1],I]);o={};for(T in E)if(E[t](T)){for(m in E[T][u])E[T][u][t](m)&&(o[t](m)?o[m][u]=o[m][u].concat(E[T][u][m]):o[m]=[E[T][u][m],E[T][s][m]||[]]);for(m in E[T][s])E[T][s][t](m)&&(o[t](m)?o[m][s]=o[m][s].concat(E[T][s][m]):o[m]=[E[T][u][m]||[],E[T][s][m]])}return o};return e.VERSION="0.1",e});