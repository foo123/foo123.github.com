/**
*
*   RegexComposer
*   @version: 0.4.5
*
*   A simple and intuitive Regular Expression Composer for PHP, Python, Node/XPCOM/JS
*   https://github.com/foo123/RegexAnalyzer
*
**/
!function(t,r,e){"use strict";"undefined"!=typeof Components&&"object"==typeof Components.classes&&"object"==typeof Components.classesByID&&Components.utils&&"function"==typeof Components.utils["import"]?(t.$deps=t.$deps||{})&&(t.EXPORTED_SYMBOLS=[r])&&(t[r]=t.$deps[r]=e.call(t)):"object"==typeof module&&module.exports?(module.$deps=module.$deps||{})&&(module.exports=module.$deps[r]=e.call(t)):"undefined"!=typeof System&&"function"==typeof System.register&&"function"==typeof System["import"]?System.register(r,[],function(n){n(r,e.call(t))}):"function"==typeof define&&define.amd&&"function"==typeof require&&"function"==typeof require.specified&&require.specified(r)?define(r,["module"],function(r){return e.moduleUri=r.uri,e.call(t)}):r in t||(t[r]=e.call(t)||1)&&"function"==typeof define&&define.amd&&define(function(){return t[r]})}(this,"RegexComposer",function(t){"use strict";var r="0.4.5",e="prototype",n=Object[e],a=Array[e],p=(n.toString,function(t,r){return new RegExp(t,r||"")}),u=function(t){return a.slice.apply(t,a.slice.call(arguments,1))},s=function(t){return t.replace(/([.*+?^${}()|[\]\/\\\-])/g,"\\$1")},o=function(t){for(var r=[],e=0;e<t.length;)r=r.concat(t[e++]);return r},l=function(t,r){return o(u(t))},i=2,c=4,f=8,$=16,h=function d(){return this instanceof d?(this.$regex=null,void this.reset()):new d};h.VERSION=r,h[e]={constructor:h,$level:0,$regex:null,$parts:null,dispose:function(){var t=this;return t.$level=null,t.$regex=null,t.$parts=null,t},reset:function(){var t=this;return t.$level=0,t.$parts=[{part:[],type:i,flag:""}],t},compose:function(){var t=this;return t.$regex=p(t.$parts[0].part.join(""),u(arguments).join("")),t.reset(),t.$regex},partial:function(t){var r=this,e=r.$parts[0].part.join("");return!1!==t&&r.reset(),e},repeat:function(r,e,n){var a=this;if(t===r)return a;var p=t===e?"{"+r+"}":"{"+r+","+e+"}";return a.$parts[a.$level].part[a.$parts[a.$level].part.length-1]+=!1===n?p+"?":p,a},zeroOrOne:function(t){var r=this;return r.$parts[r.$level].part[r.$parts[r.$level].part.length-1]+=!1===t?"??":"?",r},zeroOrMore:function(t){var r=this;return r.$parts[r.$level].part[r.$parts[r.$level].part.length-1]+=!1===t?"*?":"*",r},oneOrMore:function(t){var r=this;return r.$parts[r.$level].part[r.$parts[r.$level].part.length-1]+=!1===t?"+?":"+",r},sub:function(r,e){var n=this;return t!==r&&(e&&(r="("+r+")"),n.$parts[n.$level].part.push(r)),n},literal:function(r,e){var n=this;return t!==r&&(r=e?"("+s(r)+")":s(r),n.$parts[n.$level].part.push(r)),n},startOfInput:function(){var t=this;return t.$parts[t.$level].part.push("^"),t},endOfInput:function(){var t=this;return t.$parts[t.$level].part.push("$"),t},any:function(){var t=this;return t.$parts[t.$level].part.push("."),t},space:function(t){var r=this;return r.$parts[r.$level].part.push(!1===t?"\\S":"\\s"),r},digit:function(t){var r=this;return r.$parts[r.$level].part.push(!1===t?"\\D":"\\d"),r},word:function(t){var r=this;return r.$parts[r.$level].part.push(!1===t?"\\W":"\\w"),r},boundary:function(t){var r=this;return r.$parts[r.$level].part.push(!1===t?"\\B":"\\b"),r},LF:function(){var t=this;return t.$parts[t.$level].part.push("\\n"),t},CR:function(){var t=this;return t.$parts[t.$level].part.push("\\r"),t},TAB:function(){var t=this;return t.$parts[t.$level].part.push("\\t"),t},CTRL:function(t){var r=this;return t&&r.$parts[r.$level].part.push("\\c"+t),r},backSpace:function(){var t=this;return t.$parts[t.$level].part.push("[\\b]"),t},backReference:function(t){var r=this;return r.$parts[r.$level].part.push("\\"+parseInt(t,10)),r},characters:function(){var t=this;if($==t.$parts[t.$level].type){var r=l(arguments,1).map(s).join("");t.$parts[t.$level].part.push(r)}return t},range:function(r,e){var n=this;if($==n.$parts[n.$level].type){if(t===r||t===e)return n;var a=s(r)+"-"+s(e);n.$parts[n.$level].part.push(a)}return n},alternate:function(){var t=this;return t.$level++,t.$parts.push({part:[],type:c,flag:""}),t},group:function(){var t=this;return t.$level++,t.$parts.push({part:[],type:f,flag:""}),t},nonCaptureGroup:function(){var t=this;return t.$level++,t.$parts.push({part:[],type:f,flag:"?:"}),t},lookAheadGroup:function(t){var r=this;return r.$level++,r.$parts.push({part:[],type:f,flag:!1===t?"?!":"?="}),r},characterGroup:function(t){var r=this;return r.$level++,r.$parts.push({part:[],type:$,flag:!1===t?"^":""}),r},end:function(){var t,r=this,e=r.$parts.pop()||{},n=e.type,a=e.flag||"",p=e.part||[];return 0<r.$level&&(t=--r.$level,(c|f)&n?r.$parts[t].part.push("("+a+p.join("|")+")"):$&n&&r.$parts[t].part.push("["+a+p.join("")+"]")),r}};var v=h[e];return v.startOfLine=v.startOfInput,v.endOfLine=v.endOfInput,v.match=v.literal,v.subRegex=v.sub,v.lineFeed=v.LF,v.carriageReturn=v.CR,v.tabulate=v.tab=v.TAB,v.control=v.CTRL,v.wordBoundary=v.boundary,v.either=v.alternate,v.chars=v.characters,v.charGroup=v.characterGroup,v.subGroup=v.subgroup=v.group,v.nonCaptureSubGroup=v.nonCaptureGroup,v.lookAheadSubGroup=v.lookAheadGroup,h});