/**
*
*   RegExComposer
*   @version: 0.3.3
*
*   A simple and intuitive Regular Expression Composer in JavaScript
*   https://github.com/foo123/regex-analyzer
*
**/!function(t,e,r){"use strict";var s,i="object"==typeof module&&module.exports,n="function"==typeof define&&define.amd;i?module.exports=(module.$deps=module.$deps||{})[e]=module.$deps[e]||r.call(t,{NODE:module})||1:n&&"function"==typeof require&&"function"==typeof require.specified&&require.specified(e)?define(e,["require","exports","module"],function(e,s,i){return r.call(t,{AMD:i})}):e in t||(t[e]=s=r.call(t,{})||1)&&n&&define(e,[],function(){return s})}(this,"RegExComposer",function(t){return function(t,e){var r=Object.prototype,s=Array.prototype,i=(r.toString,function(t){return s.slice.apply(t,s.slice.call(arguments,1))}),n=function(t){return t.replace(/([.*+?^${}()|[\]\/\\\-])/g,"\\$1")},p=function(t){for(var e=[],r=0;r<t.length;)e=e.concat(t[r++]);return e},u=function(t){return p(i(t))},h=2,a=4,l=8,o=16,c=function(){this.regex=null,this.reset()};c.VERSION="0.3.3",c.prototype={constructor:c,VERSION:c.VERSION,level:0,regex:null,parts:null,compose:function(){return this.regex=new RegExp(this.parts[0].part.join(""),i(arguments).join("")),this.reset(),this.regex},partial:function(t){var e=this.parts[0].part.join("");return!1!==t&&this.reset(),e},reset:function(){return this.level=0,this.parts=[{part:[],type:h,flag:""}],this},repeat:function(t,r,s){if(e===t)return this;var i=e===r?"{"+t+"}":"{"+t+","+r+"}";return this.parts[this.level].part[this.parts[this.level].part.length-1]+=!1===s?i+"?":i,this},zeroOrOne:function(t){return this.parts[this.level].part[this.parts[this.level].part.length-1]+=!1===t?"??":"?",this},zeroOrMore:function(t){return this.parts[this.level].part[this.parts[this.level].part.length-1]+=!1===t?"*?":"*",this},oneOrMore:function(t){return this.parts[this.level].part[this.parts[this.level].part.length-1]+=!1===t?"+?":"+",this},sub:function(t,r){return e!==t&&this.parts[this.level].part.push(r?"("+t+")":t),this},match:function(t){return e!==t&&this.parts[this.level].part.push(n(t)),this},startOfInput:function(){return this.parts[this.level].part.push("^"),this},endOfInput:function(){return this.parts[this.level].part.push("$"),this},any:function(){return this.parts[this.level].part.push("."),this},space:function(t){return this.parts[this.level].part.push(!1===t?"\\S":"\\s"),this},digit:function(t){return this.parts[this.level].part.push(!1===t?"\\D":"\\d"),this},word:function(t){return this.parts[this.level].part.push(!1===t?"\\W":"\\w"),this},boundary:function(t){return this.parts[this.level].part.push(!1===t?"\\B":"\\b"),this},LF:function(){return this.parts[this.level].part.push("\\n"),this},CR:function(){return this.parts[this.level].part.push("\\r"),this},TAB:function(){return this.parts[this.level].part.push("\\t"),this},CTRL:function(t){return t&&this.parts[this.level].part.push("\\c"+t),this},backSpace:function(){return this.parts[this.level].part.push("[\\b]"),this},backReference:function(t){return this.parts[this.level].part.push("\\"+parseInt(t,10)),this},characters:function(){if(o==this.parts[this.level].type){var t=u(arguments,1).map(n).join("");this.parts[this.level].part.push(t)}return this},range:function(t,r){if(o==this.parts[this.level].type){if(e===t||e===r)return this;var s=n(t)+"-"+n(r);this.parts[this.level].part.push(s)}return this},alternate:function(){return this.level++,this.parts.push({part:[],type:a,flag:""}),this},group:function(){return this.level++,this.parts.push({part:[],type:l,flag:""}),this},nonCaptureGroup:function(){return this.level++,this.parts.push({part:[],type:l,flag:"?:"}),this},lookAheadGroup:function(t){return this.level++,this.parts.push({part:[],type:l,flag:!1===t?"?!":"?="}),this},characterGroup:function(t){return this.level++,this.parts.push({part:[],type:o,flag:!1===t?"^":""}),this},end:function(){var t,e=this.parts.pop()||{},r=e.type,s=e.flag||"",i=e.part||[];return 0<this.level&&(t=--this.level,(a|l)&r?this.parts[t].part.push("("+s+i.join("|")+")"):o&r&&this.parts[t].part.push("["+s+i.join("")+"]")),this}};var f=c.prototype;f.startOfLine=f.startOfInput,f.endOfLine=f.endOfInput,f.subRegex=f.sub,f.lineFeed=f.LF,f.carriageReturn=f.CR,f.tabulate=f.tab=f.TAB,f.control=f.CTRL,f.wordBoundary=f.boundary,f.either=f.alternate,f.subGroup=f.group,f.nonCaptureSubGroup=f.nonCaptureGroup,f.lookAheadSubGroup=f.lookAheadGroup,t.RegExComposer=c}(t),t.RegExComposer});